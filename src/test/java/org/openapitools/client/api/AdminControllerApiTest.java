/*
 * SFC-IVR
 * SFC-IVR-apis
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Response;
import org.openapitools.client.model.SigninResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AdminControllerApi
 */
@Disabled
public class AdminControllerApiTest {

    private final AdminControllerApi api = new AdminControllerApi();

    /**
     * createServiceProvider
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createServiceProviderUsingPOSTTest() throws ApiException {
        String name = null;
        String address = null;
        String email = null;
        List<Integer> invokingNumbers = null;
        Response response = api.createServiceProviderUsingPOST(name, address, email, invokingNumbers);
        // TODO: test validations
    }

    /**
     * getAllServiceProviders
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllServiceProvidersUsingGETTest() throws ApiException {
        Response response = api.getAllServiceProvidersUsingGET();
        // TODO: test validations
    }

    /**
     * getAllUsers
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllUsersUsingGETTest() throws ApiException {
        Response response = api.getAllUsersUsingGET();
        // TODO: test validations
    }

    /**
     * getSpPositionData
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSpPositionDataUsingGETTest() throws ApiException {
        Integer spId = null;
        Response response = api.getSpPositionDataUsingGET(spId);
        // TODO: test validations
    }

    /**
     * getserviceProviderInfo
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getserviceProviderInfoUsingGETTest() throws ApiException {
        String uniqueId = null;
        Response response = api.getserviceProviderInfoUsingGET(uniqueId);
        // TODO: test validations
    }

    /**
     * signin
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void signinUsingPOSTTest() throws ApiException {
        String email = null;
        String password = null;
        SigninResponse response = api.signinUsingPOST(email, password);
        // TODO: test validations
    }

    /**
     * signup
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void signupUsingPOSTTest() throws ApiException {
        String email = null;
        String name = null;
        String password = null;
        Response response = api.signupUsingPOST(email, name, password);
        // TODO: test validations
    }

}
