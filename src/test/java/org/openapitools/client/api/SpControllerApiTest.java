/*
 * SFC-IVR
 * SFC-IVR-apis
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Resource;
import org.openapitools.client.model.Response;
import org.openapitools.client.model.ServiceProvider;
import org.openapitools.client.model.SigninResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SpControllerApi
 */
@Disabled
public class SpControllerApiTest {

    private final SpControllerApi api = new SpControllerApi();

    /**
     * addSpPositionData
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addSpPositionDataUsingPOSTTest() throws ApiException {
        String spId = null;
        String position = null;
        String text = null;
        String type = null;
        Response response = api.addSpPositionDataUsingPOST(spId, position, text, type);
        // TODO: test validations
    }

    /**
     * downloadfile
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void downloadfileUsingGETTest() throws ApiException {
        String fileName = null;
        Resource response = api.downloadfileUsingGET(fileName);
        // TODO: test validations
    }

    /**
     * getUsers
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUsersUsingGETTest() throws ApiException {
        Integer spId = null;
        Response response = api.getUsersUsingGET(spId);
        // TODO: test validations
    }

    /**
     * logout
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void logoutUsingGETTest() throws ApiException {
        Integer spId = null;
        Response response = api.logoutUsingGET(spId);
        // TODO: test validations
    }

    /**
     * resetPassword
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void resetPasswordUsingPOSTTest() throws ApiException {
        ServiceProvider serviceProvider = null;
        Response response = api.resetPasswordUsingPOST(serviceProvider);
        // TODO: test validations
    }

    /**
     * signin
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void signinUsingPOST1Test() throws ApiException {
        String email = null;
        String password = null;
        SigninResponse response = api.signinUsingPOST1(email, password);
        // TODO: test validations
    }

}
